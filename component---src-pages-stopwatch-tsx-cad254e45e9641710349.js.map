{"version":3,"file":"component---src-pages-stopwatch-tsx-cad254e45e9641710349.js","mappings":"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","sources":["webpack://multi-stopwatch/./node_modules/@chakra-ui/button/dist/chunk-DA7QIPTJ.mjs","webpack://multi-stopwatch/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://multi-stopwatch/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","webpack://multi-stopwatch/./src/components/multiStopwatch/stopwatchRow/lapData.tsx","webpack://multi-stopwatch/./node_modules/@chakra-ui/icons/dist/chunk-7YYN6TNS.mjs","webpack://multi-stopwatch/./src/components/multiStopwatch/stopwatchRow/rowControls.tsx","webpack://multi-stopwatch/./src/components/multiStopwatch/stopwatchRow/component.tsx","webpack://multi-stopwatch/./node_modules/@chakra-ui/icons/dist/chunk-G6T6CBSV.mjs","webpack://multi-stopwatch/./src/components/multiStopwatch/component.tsx","webpack://multi-stopwatch/./src/components/multiStopwatch/index.ts","webpack://multi-stopwatch/./src/pages/stopwatch.tsx"],"sourcesContent":["'use client'\nimport {\n  ButtonGroupProvider\n} from \"./chunk-T6ZDZOLO.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n//# sourceMappingURL=chunk-DA7QIPTJ.mjs.map","'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import { Box, Center, Text, VStack } from '@chakra-ui/react';\nimport { formatMs } from 'utils';\nimport React from 'react';\n\ninterface LapDataProps {\n  laps: number[];\n  startTime: number;\n  index: number;\n}\n\nexport const LapData = ({ laps, startTime, index }: LapDataProps) => (\n  <Box m={0} p={1} borderWidth={'1px'} borderColor={'rgba(200, 200, 200, 200)'}>\n    <Center>\n      <VStack spacing={0}>\n        <Text fontSize={'sm'}>{index + 1}</Text>\n        <Text fontSize={'md'} as={'b'}>\n          {formatMs(laps[index] - startTime)}\n        </Text>\n        <Text fontSize={'sm'}>{formatMs(laps[index] - (index ? laps[index - 1] : startTime))}</Text>\n      </VStack>\n    </Center>\n  </Box>\n);\n","'use client'\n\n// src/Delete.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport {\n  DeleteIcon\n};\n//# sourceMappingURL=chunk-7YYN6TNS.mjs.map","import { Stopwatch, StopwatchState } from 'utils';\nimport { Button, ButtonGroup, IconButton, Input, Text, VStack } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport React from 'react';\n\ninterface RowControlsProps {\n  sw: Stopwatch;\n  stop: () => void;\n  lap: () => void;\n  index: number;\n  remove: () => void;\n  setName: (name: string) => void;\n}\n\nexport const RowControls = ({ sw, stop, lap, remove, setName }: RowControlsProps) => {\n  switch (sw.state) {\n    case StopwatchState.NOT_STARTED:\n      return (\n        <>\n          <Input\n            maxWidth={'20ch'}\n            size={'md'}\n            value={sw.name}\n            onChange={e => setName(e.target.value)}\n          />\n          <IconButton\n            colorScheme={'red'}\n            onClick={remove}\n            aria-label={'Start'}\n            icon={<DeleteIcon />}\n          />\n        </>\n      );\n    case StopwatchState.RUNNING:\n      return (\n        <VStack spacing={2} m={0} p={1}>\n          <Text fontSize={'lg'} as={'b'}>\n            {sw.name}\n          </Text>\n\n          <ButtonGroup size={'md'} isAttached variant={'solid'}>\n            <Button colorScheme={'blue'} onClick={lap}>\n              Lap\n            </Button>\n            <Button colorScheme={'red'} onClick={stop}>\n              Stop\n            </Button>\n          </ButtonGroup>\n        </VStack>\n      );\n    case StopwatchState.COMPLETED:\n      return (\n        <VStack spacing={2} m={0} p={1}>\n          <Text fontSize={'lg'} as={'b'}>\n            {sw.name}\n          </Text>\n        </VStack>\n      );\n  }\n};\n","import { Box, Center, HStack, Text, VStack } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { formatMs, StopwatchUtils, Stopwatch, StopwatchState } from 'utils';\nimport { LapData } from './lapData';\nimport { RowControls } from './rowControls';\n\ninterface StopwatchRowProps {\n  sw: Stopwatch;\n  index: number;\n  stop: () => void;\n  lap: () => void;\n  remove: () => void;\n  setName: (name: string) => void;\n}\n\nexport const StopwatchRow = ({ sw, index, stop, lap, remove, setName }: StopwatchRowProps) => (\n  <HStack spacing={0} mt={1} borderWidth={'1px'}>\n    <RowControls sw={sw} stop={stop} lap={lap} index={index} remove={remove} setName={setName} />\n    {sw.state !== StopwatchState.NOT_STARTED && (\n      <>\n        <CurrentTime sw={sw} />\n        {sw.laps.map((_, i) => (\n          <LapData key={i} laps={sw.laps} startTime={sw.startTime} index={sw.laps.length - i - 1} />\n        ))}\n      </>\n    )}\n  </HStack>\n);\n\nconst CurrentTime = ({ sw }: { sw: Stopwatch }) => {\n  const [now, setNow] = useState<number>(Date.now());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setNow(Date.now());\n    }, 20);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <Center m={0} p={1} borderWidth={'1px'} borderColor={'rgba(200, 200, 200, 200)'}>\n      <VStack spacing={0}>\n        <Text fontSize={'sm'}>{sw.laps.length + 1}</Text>\n        <Text fontSize={'md'} as={'b'}>\n          {formatMs(StopwatchUtils.elapsed(sw, now))}\n        </Text>\n        <Text fontSize={'sm'}>{formatMs(StopwatchUtils.currentLap(sw, now))}</Text>\n      </VStack>\n    </Center>\n  );\n};\n","'use client'\n\n// src/ArrowBack.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowBackIcon = createIcon({\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\",\n  displayName: \"ArrowBackIcon\"\n});\n\nexport {\n  ArrowBackIcon\n};\n//# sourceMappingURL=chunk-G6T6CBSV.mjs.map","import React from 'react';\nimport { Box, Button, ButtonGroup, Center, IconButton, VStack } from '@chakra-ui/react';\nimport { StopwatchRow } from './stopwatchRow';\nimport { MultiStopwatchState, toCSV, useMultiStopwatch } from 'utils';\nimport { AddIcon, ArrowBackIcon } from '@chakra-ui/icons';\nimport { Link } from 'gatsby';\n\nconst MultiStopwatchComponent = ({ id }: { id: string }) => {\n  const {\n    createStopwatch,\n    removeStopwatch,\n    multiStopwatch,\n    stopAll,\n    stop,\n    startAll,\n    resetAll,\n    lap,\n    setStopwatchName,\n  } = useMultiStopwatch(id);\n\n  const exportCSV = () => {\n    const csv = toCSV(multiStopwatch);\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const link = document.createElement('a');\n    console.log('Downloading');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${multiStopwatch.name}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <Box m={1}>\n      <Link to={'/'}>\n        <ArrowBackIcon boxSize={8} />\n      </Link>\n\n      {/* Controls */}\n      <Center mb={2} mt={2}>\n        <ButtonGroup isAttached variant={'solid'}>\n          <Button\n            colorScheme={'green'}\n            isDisabled={multiStopwatch.state != MultiStopwatchState.NOT_STARTED}\n            onClick={() => startAll()}\n          >\n            Start All\n          </Button>\n          <Button\n            isDisabled={multiStopwatch.state != MultiStopwatchState.RUNNING}\n            colorScheme={'red'}\n            onClick={() => stopAll()}\n          >\n            Stop All\n          </Button>\n          <Button\n            colorScheme={'yellow'}\n            isDisabled={multiStopwatch.state == MultiStopwatchState.NOT_STARTED}\n            onClick={() => resetAll()}\n          >\n            Reset All\n          </Button>\n        </ButtonGroup>\n      </Center>\n\n      <VStack align={'flex-start'} spacing={0}>\n        {multiStopwatch.stopwatches.map((sw, index) => (\n          <StopwatchRow\n            key={index}\n            sw={sw}\n            index={index}\n            stop={() => stop(index)}\n            lap={() => lap(index)}\n            remove={() => removeStopwatch(index)}\n            setName={name => setStopwatchName(index, name)}\n          />\n        ))}\n      </VStack>\n\n      {multiStopwatch.state == MultiStopwatchState.NOT_STARTED && (\n        <Center mt={2}>\n          <IconButton\n            colorScheme={'green'}\n            aria-label={'Add Stopwatch'}\n            onClick={createStopwatch}\n            icon={<AddIcon />}\n          />\n        </Center>\n      )}\n\n      {multiStopwatch.state == MultiStopwatchState.COMPLETE && (\n        <Button onClick={exportCSV} mt={2}>\n          Export CSV\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport default MultiStopwatchComponent;\n","import MultiStopwatch from './component';\n\nexport default MultiStopwatch;\n","import React from 'react';\nimport { useLocation } from '@reach/router';\nimport { Box } from '@chakra-ui/react';\nimport MultiStopwatchComponent from '../components/multiStopwatch';\n\nconst StopwatchPage = () => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const id = searchParams.get('id');\n\n  if (!id) return null;\n\n  return (\n    <Box\n      bgColor={'#1B1342'}\n      color={'#F5EFED'}\n      minHeight={'100vh'}\n      width={'auto'}\n      overflowX={'auto'}\n    >\n      <MultiStopwatchComponent id={id} />\n    </Box>\n  );\n};\n\nexport default StopwatchPage;\n"],"names":["attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","props","ref","size","colorScheme","variant","className","isAttached","isDisabled","orientation","rest","_className","cx","context","useMemo","groupStyles","display","isVertical","jsx","value","children","div","role","__css","flexDir","displayName","Text","styles","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","p","LapData","_ref","laps","startTime","index","React","Box","m","borderWidth","borderColor","Center","VStack","fontSize","as","formatMs","DeleteIcon","path","fill","d","RowControls","sw","stop","lap","remove","setName","state","StopwatchState","NOT_STARTED","Input","maxWidth","name","onChange","e","target","IconButton","onClick","icon","RUNNING","Button","COMPLETED","StopwatchRow","HStack","mt","CurrentTime","map","_","i","length","_ref2","now","setNow","useState","Date","useEffect","intervalId","setInterval","clearInterval","StopwatchUtils","elapsed","currentLap","ArrowBackIcon","id","createStopwatch","removeStopwatch","multiStopwatch","stopAll","startAll","resetAll","setStopwatchName","useMultiStopwatch","Link","to","boxSize","mb","MultiStopwatchState","stopwatches","AddIcon","COMPLETE","csv","toCSV","blob","Blob","type","link","document","createElement","console","log","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","location","useLocation","URLSearchParams","search","get","bgColor","color","minHeight","width","overflowX","MultiStopwatchComponent"],"sourceRoot":""}